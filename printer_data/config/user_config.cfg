## Copyright (C) 2023 Chris Laprade (chris@rootiest.com)
## 
## This file is part of printcfg.
## 
## printcfg is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## printcfg is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with printcfg.  If not, see <http://www.gnu.org/licenses/>.

#####################################
##        Print Configuration      ##
##      Version 4.1.0 2023-7-3     ##
#####################################
# Profile:default
# Patch:4.0.0
#####################################
##         Default Profile         ##
#####################################

## This is the main config file which
## should be added/included to your
##         printer.cfg file.
## 
## The other files are included by this
## one using the lines below:

## Mandatory includes:
[include user_profile.cfg]
[include printcfg/print_macros.cfg]

#####################################

## Optional includes:
[include printcfg/print_extras.cfg]

## Unstable Development:
#[include printcfg/print_dev.cfg]

## Debugging tools:
#[include printcfg/print_debug.cfg]

## Please comment/uncomment any of the
## optional sections above that you would
## like to use.

#####################################

## Enable pause/resume functionality
[pause_resume]
recover_velocity: 100

## Allow printing from gcode files
[virtual_sdcard]
## Edit this path if you are using multiple instances
path: ~/printer_data/gcodes
on_error_gcode:
    ## Tell the printer to run CANCEL_PRINT if an error occurs during printing
    CANCEL_PRINT

## Console output
## Use variable_output: 118
[respond]
default_type: command

## Display output
## Use variable_output: 117
[display_status]

## Silence output
## Use variable_output: 116
[gcode_macro M116]
description: Silent status feedback
gcode:

## Dual output
## Use variable_output: 1187 or 1178
[gcode_macro M1187]
description: Dual status feedback
gcode:
    M117 {rawparams}
    M118 {rawparams}
[gcode_macro M1178]
gcode:
    M1187 {rawparams}


## Manage individual objects
[exclude_object]

## Save persistent variables
[save_variables]
## Edit this file path if you are running multiple instances
filename: ~/printer_data/config/variables.cfg

## Idle timer
[idle_timeout]
timeout: 900
gcode: _IDLER ; Run the idler macro

################################
####### EXTRACT_FILAMENT #######
################################
## You may customize this macro as needed to tune the filament unload process
[gcode_macro _extract_filament]
gcode:
    {% set printcfg = printer['gcode_macro _printcfg'] %}   ; Load config variables
    G91                                                     ; Relative positioning
    ## Pre-unload to loosen filament
    G1 E1 F3600                                             ; Extrude a bit very quickly
    G1 E-5 F3600                                            ; Retract a bit very quickly
    G1 E7 F3600                                             ; Extrude a bit to skinny dip
    G1 E-15 F3600 	                                        ; pull hard filament to cold end
    G1 E25 F3600 	                                        ; push filament back to hot end
    G1 E-30 F3600                                           ; pull hard filament past cold end
    G1 E30 F1500                                            ; push filament back to hot end slowly
    G1 E-30 F4000                                           ; complete pre-unload extraction
    ## Unload
    G1 E-{printcfg.m600_unload_length} F{printcfg.m600_fast_speed|int}           ; Execute main unload retraction
    G90                                                     ; Absolute postitioning
    M400                                                    ; Ensure commands complete before continuing

###############################
### Filament Switch Sensor ####
### https://www.klipper3d.org/Config_Reference.html#filament_switch_sensor ###
###############################
#[filament_switch_sensor filament_sensor]
#switch_pin: ^PB6
#pause_on_runout: False ; pause handled by macro
#runout_gcode:
#  FILAMENT_RUNOUT ; trigger filament runout
#insert_gcode:
#  LOAD_FILAMENT ; trigger filament load

###############################
### Filament Motion Sensor ####
### https://www.klipper3d.org/Config_Reference.html#filament_motion_sensor ###
###############################
#[filament_motion_sensor smart_filament_sensor]
#switch_pin: ^PB6
#detection_length: 7.0
#extruder: extruder
#pause_on_runout: False ; pause handled by macro
#runout_gcode:
#  FILAMENT_RUNOUT ; trigger filament runout
#insert_gcode:
#  LOAD_FILAMENT ; trigger filament load

################################
########### BEEPER #############
################################
[gcode_macro M300]
description: Play a tone
gcode:

##########################################################################
################# Uncomment Below to enable beeper #######################
##########################################################################
#    {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
#    {% set P = params.P|default(100)|int %} ; P sets the tone duration
#    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
#    {% if S <= 0 %} ; dont divide through zero
#        {% set F = 1 %}
#        {% set L = 0 %}
#    {% elif S >= 10000 %} ;max frequency set to 10kHz
#        {% set F = 0 %}
#    {% else %}
#        {% set F = 1/S %} ;convert frequency to seconds
#    {% endif %}
#    SET_PIN PIN=_beeper VALUE={L} CYCLE_TIME={F} ;Play tone
#    G4 P{P} ;tone duration
#    SET_PIN PIN=_beeper VALUE=0

################################
######### SET_CONFIGS ##########
################################
## SET_MATERIAL
## Set Material-specific Configs
## 
## Add this immediately after your start_print line of the start gcode in Prusa/SuperSlicer:
##     SET_MATERIAL MATERIAL='{filament_type[initial_extruder]}'
## 
## Add this immediately after your start_print line of the start gcode in Cura:
##     SET_MATERIAL MATERIAL='{material_type}'
## 
[gcode_macro SET_MATERIAL]
description: Set values based on material type
variable_material: ''
gcode:
    {% set MATERIAL = params.MATERIAL|default('ABS')|string %} ; Get material type from slicer
    SET_GCODE_VARIABLE MACRO=SET_MATERIAL VARIABLE=material VALUE='"{MATERIAL}"' ; Save the material type to a variable
    {% if MATERIAL == 'PLA' %} ; If material type is PLA
        SET_GCODE_VARIABLE MACRO=_printcfg VARIABLE=nevermore_speed VALUE=0 ; Set nevermore_speed to off
        #BED_MESH_PROFILE LOAD="pla_mesh" ; Load bed mesh
        #SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
        #SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=2000 ; Set max speed/acceleration
        #SET_INPUT_SHAPER SHAPER_FREQ_X=58.6 SHAPER_FREQ_Y=34.2 SHAPER_TYPE_X=mzv SHAPER_TYPE_Y=mzv ; Set input_shaper
    {% elif MATERIAL == 'ABS' %} ; If material type is ABS
        SET_GCODE_VARIABLE MACRO=_printcfg VARIABLE=nevermore_speed VALUE=1.0 ; Set nevermore_speed to max
        #BED_MESH_PROFILE LOAD="abs_mesh" ; Load bed mesh
        #SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% elif MATERIAL == 'ASA' %} ; If material type is ASA
        SET_GCODE_VARIABLE MACRO=_printcfg VARIABLE=nevermore_speed VALUE=1.0 ; Set nevermore_speed to max
        #BED_MESH_PROFILE LOAD="asa_mesh" ; Load bed mesh
        #SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% elif MATERIAL == 'ABS+' %} ; If material type is ABS+
        SET_GCODE_VARIABLE MACRO=_printcfg VARIABLE=nevermore_speed VALUE=1.0 ; Set nevermore_speed to max
        #BED_MESH_PROFILE LOAD="abs_plus_mesh" ; Load bed mesh
        #SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% elif MATERIAL == 'PLA+' %} ; If material type is PLA+
        SET_GCODE_VARIABLE MACRO=_printcfg VARIABLE=nevermore_speed VALUE=0 ; Set nevermore_speed to off
        #BED_MESH_PROFILE LOAD="pla_plus_mesh" ; Load bed mesh
        #SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% elif MATERIAL == 'PETG' %} ; If material type is PETG
        SET_GCODE_VARIABLE MACRO=_printcfg VARIABLE=nevermore_speed VALUE=0 ; Set nevermore_speed to off
        #BED_MESH_PROFILE LOAD="petg_mesh" ; Load bed mesh
        #SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% elif MATERIAL == 'TPU' %} ; If material type is TPU
        SET_GCODE_VARIABLE MACRO=_printcfg VARIABLE=nevermore_speed VALUE=0 ; Set nevermore_speed to off
        #BED_MESH_PROFILE LOAD="tpu_mesh" ; Load bed mesh
        #SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% elif MATERIAL == 'PC' %} ; If material type is PC
        #BED_MESH_PROFILE LOAD="pc_mesh" ; Load bed mesh
        #SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {%else %} ; If any other material type
        #BED_MESH_PROFILE LOAD="default" ; Load default bed mesh
        #SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% endif %}

## SET_NOZZLE
## Set nozzle-specific Configs
## 
## Add this immediately after your start_print line of the start gcode in Prusa/SuperSlicer:
##     SET_NOZZLE NOZZLE='{nozzle_diameter[initial_extruder]}'
## 
## Add this immediately after your start_print line of the start gcode in Cura:
##     SET_NOZZLE NOZZLE='{machine_nozzle_size}'
## 
[gcode_macro SET_NOZZLE]
description: Set values based on nozzle diameter
variable_nozzle: 0
gcode:
    {% set NOZZLE = params.NOZZLE|default(0.4)|float %} ; Get nozzle diameter from slicer
    SET_GCODE_VARIABLE MACRO=SET_NOZZLE VARIABLE=nozzle VALUE={NOZZLE} ; Save the nozzle diameter to a variable
    {% if NOZZLE == 0.4 %} ; If nozzle diameter is 0.4
        #SET_PRESSURE_ADVANCE ADVANCE=0.040 SMOOTH_TIME=0.040 ; Set pressure_advance settings
    {% elif NOZZLE == 0.6 %} ; If nozzle diameter is 0.6
        #SET_PRESSURE_ADVANCE ADVANCE=0.010 SMOOTH_TIME=0.040 ; Set pressure_advance settings
    {%else %} ; If any other nozzle diameter
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% endif %}

################################
######## Door Configs ##########
################################

#[gcode_button left_door]
##########  IMPORTANT  ###########
## ---------------------------- ##
# Set pin to match your machine: #
#pin: !PG16                      # 
## ---------------------------- ##
##########  IMPORTANT  ###########
#press_gcode:
#    _close_door ; DO NOT CHANGE
#release_gcode:
#    _open_door  ; DO NOT CHANGE

#[gcode_button right_door]
##########  IMPORTANT  ###########
## ---------------------------- ##
# Set pin to match your machine: #
#pin: !PG16                      # 
## ---------------------------- ##
##########  IMPORTANT  ###########
#press_gcode:
#    _close_door ; DO NOT CHANGE
#release_gcode:
#    _open_door  ; DO NOT CHANGE